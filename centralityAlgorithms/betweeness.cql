
CREATE
(sh1:SuperHero{Name:"Ant-Man"}) ,
(sh2:SuperHero{Name:"Aquaman"}) ,
(sh3:SuperHero{Name:"Batman"}) ,
(sh4:SuperHero{Name:"Black Panther"}) ,
(sh5:SuperHero{Name:"Black Widow"}) ,
(sh6:SuperHero{Name:"Captain America"}) ,
(sh7:SuperHero{Name:"Captain Marvel"}) ,
(sh8:SuperHero{Name:"Flash"}) ,
(sh9:SuperHero{Name:"Green Arrow"}) ,
(sh10:SuperHero{Name:"Green Lantern"}) ,
(sh11:SuperHero{Name:"Hawkgirl"}) ,
(sh12:SuperHero{Name:"Hawkman"}) ,
(sh13:SuperHero{Name:"Hulk"}) ,
(sh14:SuperHero{Name:"Iron Man"}) ,
(sh15:SuperHero{Name:"Nick Fury"}) ,
(sh16:SuperHero{Name:"Quicksilver"}) ,
(sh17:SuperHero{Name:"Scarlet Witch"}) ,
(sh18:SuperHero{Name:"Spider-Man"}) ,
(sh19:SuperHero{Name:"Star-Lord"}) ,
(sh20:SuperHero{Name:"Superman"}) ,
(sh21:SuperHero{Name:"Thor"}) ,
(sh22:SuperHero{Name:"Wasp"}) ,
(sh23:SuperHero{Name:"Wonder Woman"}) ,
(v1:Villian{Name:"Joker"}) ,
(v2:Villian{Name:"Lex Luthor"}) ,
(v3:Villian{Name:"Bane"}) ,
(v4:Villian{Name:"Darkseid"}) ,
(v5:Villian{Name:"Siniestro"}) ,
(v6:Villian{Name:"Lobo"}) ,
(v7:Villian{Name:"Deathstroke"}) ,
(v8:Villian{Name:"Harley Quinn"}) ,
(v9:Villian{Name:"Catwoman"}) ,
(v10:Villian{Name:"Braniac"}) ,
(v11:Villian{Name:"Flash Rebirth"}) ,
(v12:Villian{Name:"Bizarro"}) ,
(v13:Villian{Name:"Grodd"}) ,
(v14:Villian{Name:"Black Manta"}) ,
(v15:Villian{Name:"Zod"}) ,
(v16:Villian{Name:"Cheetah"}) ,
(v17:Villian{Name:"Abomination"}) ,
(v18:Villian{Name:"Viper"}) ,
(v19:Villian{Name:"Ultron"}) ,
(v20:Villian{Name:"Venom"}) ,
(v21:Villian{Name:"Green Goblin"}) ,
(v22:Villian{Name:"Thanos"}) ,
(v23:Villian{Name:"Loki"}) ,
(v24:Villian{Name:"Red Skull"}) ,
(v25:Villian{Name:"Doctor Doom"}) ,
(pe1:Person{Name:"Barry Allen"}) ,
(pe2:Person{Name:"Bruce Banner"}) ,
(pe3:Person{Name:"Bruce Wayne"}) ,
(pe4:Person{Name:"Clark Kent"}) ,
(pe5:Person{Name:"Diana Prince"}) ,
(pe6:Person{Name:"Hall Jordan"}) ,
(pe7:Person{Name:"Henry Pym"}) ,
(pe8:Person{Name:"Janet Van Dyne"}) ,
(pe9:Person{Name:"Natasha Romanoff"}) ,
(pe10:Person{Name:"Nicholas Joseph Fury"}) ,
(pe11:Person{Name:"Oliver Jonas Queen"}) ,
(pe12:Person{Name:"Peter Jason Quill"}) ,
(pe13:Person{Name:"Peter Parker"}) ,
(pe14:Person{Name:"Pietro Maximoff "}) ,
(pe15:Person{Name:"T'Challa"}) ,
(pe16:Person{Name:"Tony Stark"}) ,
(pe17:Person{Name:"Wanda Maximoff "}) ,
(lo1:Location{Name:"Alabama"}) ,
(lo2:Location{Name:"Asgard"}) ,
(lo3:Location{Name:"Brooklyn"}) ,
(lo4:Location{Name:"California"}) ,
(lo5:Location{Name:"Europe"}) ,
(lo6:Location{Name:"Filadelfia"}) ,
(lo7:Location{Name:"Georgia"}) ,
(lo8:Location{Name:"Greece"}) ,
(lo9:Location{Name:"Long Island"}) ,
(lo10:Location{Name:"Louisiana"}) ,
(lo11:Location{Name:"Maine"}) ,
(lo12:Location{Name:"Missouri"}) ,
(lo13:Location{Name:"New Jersey"}) ,
(lo14:Location{Name:"New York"}) ,
(lo15:Location{Name:"Ohio"}) ,
(lo16:Location{Name:"Russia"}) ,
(lo17:Location{Name:"Wakanda"}) ,
(u1:Universe{Name:"DC Comics"}) ,
(u2:Universe{Name:"Marvel Comics"}) ,
(g1:Gender{Name:"Male"}) ,
(g2:Gender{Name:"Female"}) ,
(a1:Ability{Name:"Agility"}) ,
(a2:Ability{Name:"Aquatic Breathing"}) ,
(a3:Ability{Name:"Archery"}) ,
(a4:Ability{Name:"Fly"}) ,
(a5:Ability{Name:"Intelligence"}) ,
(a6:Ability{Name:"Magic"}) ,
(a7:Ability{Name:"Power Ring"}) ,
(a8:Ability{Name:"Rescale"}) ,
(a9:Ability{Name:"Speed"}) ,
(a10:Ability{Name:"Supersenses"}) ,
(a11:Ability{Name:"Superstrength"}) ,
(sh1)-[:FRIEND_OF{Weight:1}]->(sh22),
(sh2)-[:FRIEND_OF{Weight:2}]->(sh3),
(sh3)-[:FRIEND_OF{Weight:3}]->(sh20),
(sh4)-[:FRIEND_OF{Weight:4}]->(sh6),
(sh5)-[:FRIEND_OF{Weight:5}]->(sh6),
(sh6)-[:FRIEND_OF{Weight:6}]->(sh14),
(sh7)-[:FRIEND_OF{Weight:7}]->(sh15),
(sh8)-[:FRIEND_OF{Weight:8}]->(sh9),
(sh9)-[:FRIEND_OF{Weight:9}]->(sh8),
(sh10)-[:FRIEND_OF{Weight:1}]->(sh20),
(sh11)-[:FRIEND_OF{Weight:2}]->(sh10),
(sh12)-[:FRIEND_OF{Weight:3}]->(sh11),
(sh13)-[:FRIEND_OF{Weight:4}]->(sh21),
(sh14)-[:FRIEND_OF{Weight:5}]->(sh18),
(sh15)-[:FRIEND_OF{Weight:6}]->(sh7),
(sh16)-[:FRIEND_OF{Weight:7}]->(sh17),
(sh17)-[:FRIEND_OF{Weight:8}]->(sh16),
(sh18)-[:FRIEND_OF{Weight:9}]->(sh14),
(sh20)-[:FRIEND_OF{Weight:1}]->(sh3),
(sh21)-[:FRIEND_OF{Weight:2}]->(sh13),
(sh22)-[:FRIEND_OF{Weight:3}]->(sh1),
(sh23)-[:FRIEND_OF{Weight:4}]->(sh3),
(sh1)-[:FRIEND_OF{Weight:5}]->(sh13),
(sh3)-[:FRIEND_OF{Weight:6}]->(sh23),
(sh4)-[:FRIEND_OF{Weight:7}]->(sh5),
(sh5)-[:FRIEND_OF{Weight:8}]->(sh13),
(sh6)-[:FRIEND_OF{Weight:9}]->(sh5),
(sh8)-[:FRIEND_OF{Weight:1}]->(sh3),
(sh13)-[:FRIEND_OF{Weight:2}]->(sh14),
(sh14)-[:FRIEND_OF{Weight:3}]->(sh6),
(sh15)-[:FRIEND_OF{Weight:4}]->(sh6),
(sh20)-[:FRIEND_OF{Weight:5}]->(sh2),
(sh21)-[:FRIEND_OF{Weight:6}]->(sh14),
(sh23)-[:FRIEND_OF{Weight:7}]->(sh20),
(sh20)-[:FRIEND_OF{Weight:8}]->(sh8),
(sh20)-[:FRIEND_OF{Weight:9}]->(sh23),
(sh20)-[:FRIEND_OF{Weight:1}]->(sh9),
(sh14)-[:FRIEND_OF{Weight:2}]->(sh21),
(sh14)-[:FRIEND_OF{Weight:3}]->(sh13),
(sh14)-[:FRIEND_OF{Weight:4}]->(sh17),
(sh14)-[:FRIEND_OF{Weight:5}]->(sh5),
(sh2)-[:PART_OF{Since:1}]->(u1),
(sh8)-[:PART_OF{Since:1}]->(u1),
(sh10)-[:PART_OF{Since:1}]->(u1),
(sh7)-[:PART_OF{Since:1}]->(u1),
(sh3)-[:PART_OF{Since:1}]->(u1),
(sh20)-[:PART_OF{Since:1}]->(u1),
(sh12)-[:PART_OF{Since:1}]->(u1),
(sh11)-[:PART_OF{Since:1}]->(u1),
(sh9)-[:PART_OF{Since:1}]->(u1),
(sh23)-[:PART_OF{Since:1}]->(u1),
(sh6)-[:PART_OF{Since:1}]->(u2),
(sh13)-[:PART_OF{Since:3}]->(u2),
(sh15)-[:PART_OF{Since:5}]->(u2),
(sh14)-[:PART_OF{Since:10}]->(u2),
(sh19)-[:PART_OF{Since:4}]->(u2),
(sh18)-[:PART_OF{Since:7}]->(u2),
(sh5)-[:PART_OF{Since:5}]->(u2),
(sh21)-[:PART_OF{Since:8}]->(u2),
(sh22)-[:PART_OF{Since:10}]->(u2),
(sh1)-[:PART_OF{Since:15}]->(u2),
(sh17)-[:PART_OF{Since:1}]->(u2),
(sh4)-[:PART_OF{Since:3}]->(u2),
(sh16)-[:PART_OF{Since:1}]->(u2),
(sh2)-[:LIVE_IN{since:10}]->(lo11),
(sh8)-[:LIVE_IN{since:8}]->(lo12),
(sh10)-[:LIVE_IN{since:7}]->(lo4),
(sh7)-[:LIVE_IN{since:6}]->(lo7),
(sh3)-[:LIVE_IN{since:9}]->(lo6),
(sh20)-[:LIVE_IN{since:5}]->(lo14),
(sh12)-[:LIVE_IN{since:6}]->(lo10),
(sh11)-[:LIVE_IN{since:7}]->(lo10),
(sh9)-[:LIVE_IN{since:5}]->(lo4),
(sh23)-[:LIVE_IN{since:8}]->(lo8),
(sh6)-[:LIVE_IN{since:6}]->(lo3),
(sh13)-[:LIVE_IN{since:9}]->(lo15),
(sh15)-[:LIVE_IN{since:7}]->(lo1),
(sh14)-[:LIVE_IN{since:5}]->(lo9),
(sh19)-[:LIVE_IN{since:5}]->(lo12),
(sh18)-[:LIVE_IN{since:10}]->(lo14),
(sh5)-[:LIVE_IN{since:4}]->(lo16),
(sh21)-[:LIVE_IN{since:10}]->(lo2),
(sh22)-[:LIVE_IN{since:5}]->(lo13),
(sh1)-[:LIVE_IN{since:6}]->(lo14),
(sh17)-[:LIVE_IN{since:5}]->(lo5),
(sh4)-[:LIVE_IN{since:9}]->(lo17),
(sh16)-[:LIVE_IN{since:5}]->(lo5),
(sh2)-[:IS]->(g1),
(sh8)-[:IS]->(g1),
(sh10)-[:IS]->(g1),
(sh7)-[:IS]->(g1),
(sh3)-[:IS]->(g1),
(sh20)-[:IS]->(g1),
(sh12)-[:IS]->(g1),
(sh11)-[:IS]->(g2),
(sh9)-[:IS]->(g1),
(sh23)-[:IS]->(g2),
(sh6)-[:IS]->(g1),
(sh13)-[:IS]->(g1),
(sh15)-[:IS]->(g1),
(sh14)-[:IS]->(g1),
(sh19)-[:IS]->(g1),
(sh18)-[:IS]->(g1),
(sh5)-[:IS]->(g2),
(sh21)-[:IS]->(g1),
(sh22)-[:IS]->(g2),
(sh1)-[:IS]->(g1),
(sh17)-[:IS]->(g2),
(sh4)-[:IS]->(g1),
(sh16)-[:IS]->(g1),
(sh1)-[:KWOWN_AS]->(pe7),
(sh3)-[:KWOWN_AS]->(pe3),
(sh4)-[:KWOWN_AS]->(pe15),
(sh5)-[:KWOWN_AS]->(pe9),
(sh8)-[:KWOWN_AS]->(pe1),
(sh9)-[:KWOWN_AS]->(pe11),
(sh10)-[:KWOWN_AS]->(pe6),
(sh13)-[:KWOWN_AS]->(pe2),
(sh14)-[:KWOWN_AS]->(pe16),
(sh15)-[:KWOWN_AS]->(pe10),
(sh16)-[:KWOWN_AS]->(pe14),
(sh17)-[:KWOWN_AS]->(pe17),
(sh18)-[:KWOWN_AS]->(pe13),
(sh19)-[:KWOWN_AS]->(pe12),
(sh20)-[:KWOWN_AS]->(pe4),
(sh22)-[:KWOWN_AS]->(pe8),
(sh23)-[:KWOWN_AS]->(pe5),
(sh2)-[:HAS{Number:10}]->(a2),
(sh8)-[:HAS{Number:9}]->(a9),
(sh10)-[:HAS{Number:10}]->(a7),
(sh7)-[:HAS{Number:9}]->(a11),
(sh3)-[:HAS{Number:8}]->(a5),
(sh20)-[:HAS{Number:10}]->(a11),
(sh12)-[:HAS{Number:7}]->(a4),
(sh11)-[:HAS{Number:7}]->(a4),
(sh9)-[:HAS{Number:7}]->(a3),
(sh23)-[:HAS{Number:8}]->(a11),
(sh6)-[:HAS{Number:7}]->(a1),
(sh13)-[:HAS{Number:10}]->(a11),
(sh15)-[:HAS{Number:6}]->(a5),
(sh14)-[:HAS{Number:8}]->(a5),
(sh19)-[:HAS{Number:6}]->(a1),
(sh18)-[:HAS{Number:7}]->(a10),
(sh5)-[:HAS{Number:7}]->(a10),
(sh21)-[:HAS{Number:10}]->(a11),
(sh22)-[:HAS{Number:6}]->(a8),
(sh1)-[:HAS{Number:6}]->(a8),
(sh17)-[:HAS{Number:9}]->(a6),
(sh4)-[:HAS{Number:7}]->(a1),
(sh16)-[:HAS{Number:8}]->(a9),
(sh1)<-[:ENEMY_OF{Weight:2}]-(v22),
(sh2)<-[:ENEMY_OF{Weight:9}]-(v14),
(sh3)<-[:ENEMY_OF{Weight:10}]-(v1),
(sh4)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh5)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh6)<-[:ENEMY_OF{Weight:6}]-(v18),
(sh7)<-[:ENEMY_OF{Weight:5}]-(v7),
(sh8)<-[:ENEMY_OF{Weight:7}]-(v13),
(sh9)<-[:ENEMY_OF{Weight:5}]-(v9),
(sh10)<-[:ENEMY_OF{Weight:9}]-(v5),
(sh11)<-[:ENEMY_OF{Weight:5}]-(v16),
(sh12)<-[:ENEMY_OF{Weight:4}]-(v21),
(sh13)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh14)<-[:ENEMY_OF{Weight:8}]-(v19),
(sh15)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh16)<-[:ENEMY_OF{Weight:4}]-(v24),
(sh17)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh18)<-[:ENEMY_OF{Weight:9}]-(v20),
(sh20)<-[:ENEMY_OF{Weight:6}]-(v1),
(sh21)<-[:ENEMY_OF{Weight:4}]-(v23),
(sh22)<-[:ENEMY_OF{Weight:7}]-(v22),
(sh23)<-[:ENEMY_OF{Weight:3}]-(v15),
(sh1)<-[:ENEMY_OF{Weight:7}]-(v19),
(sh3)<-[:ENEMY_OF{Weight:7}]-(v8),
(sh4)<-[:ENEMY_OF{Weight:7}]-(v19),
(sh5)<-[:ENEMY_OF{Weight:8}]-(v19),
(sh6)<-[:ENEMY_OF{Weight:8}]-(v24),
(sh8)<-[:ENEMY_OF{Weight:9}]-(v11),
(sh13)<-[:ENEMY_OF{Weight:5}]-(v25),
(sh14)<-[:ENEMY_OF{Weight:10}]-(v22),
(sh15)<-[:ENEMY_OF{Weight:7}]-(v19),
(sh20)<-[:ENEMY_OF{Weight:9}]-(v15),
(sh21)<-[:ENEMY_OF{Weight:9}]-(v22),
(sh23)<-[:ENEMY_OF{Weight:4}]-(v16),
(sh20)<-[:ENEMY_OF{Weight:9}]-(v2),
(sh20)<-[:ENEMY_OF{Weight:5}]-(v6),
(sh20)<-[:ENEMY_OF{Weight:7}]-(v12),
(sh6)<-[:ENEMY_OF{Weight:9}]-(v22),
(sh6)<-[:ENEMY_OF{Weight:8}]-(v19),

(sh1)<-[:ENEMY_OF{Weight:2}]-(v22),
(sh2)<-[:ENEMY_OF{Weight:9}]-(v14),
(sh3)<-[:ENEMY_OF{Weight:10}]-(v1),
(sh4)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh5)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh6)<-[:ENEMY_OF{Weight:6}]-(v18),
(sh7)<-[:ENEMY_OF{Weight:5}]-(v7),
(sh8)<-[:ENEMY_OF{Weight:7}]-(v13),
(sh9)<-[:ENEMY_OF{Weight:5}]-(v9),
(sh10)<-[:ENEMY_OF{Weight:9}]-(v5),
(sh11)<-[:ENEMY_OF{Weight:5}]-(v16),
(sh12)<-[:ENEMY_OF{Weight:4}]-(v21),
(sh13)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh14)<-[:ENEMY_OF{Weight:8}]-(v19),
(sh15)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh16)<-[:ENEMY_OF{Weight:4}]-(v24),
(sh17)<-[:ENEMY_OF{Weight:8}]-(v22),
(sh18)<-[:ENEMY_OF{Weight:9}]-(v20),
(sh20)<-[:ENEMY_OF{Weight:6}]-(v1),
(sh21)<-[:ENEMY_OF{Weight:4}]-(v23),
(sh22)<-[:ENEMY_OF{Weight:7}]-(v22),
(sh23)<-[:ENEMY_OF{Weight:3}]-(v15),
(sh1)<-[:ENEMY_OF{Weight:7}]-(v19),
(sh3)<-[:ENEMY_OF{Weight:7}]-(v8),
(sh4)<-[:ENEMY_OF{Weight:7}]-(v19),
(sh5)<-[:ENEMY_OF{Weight:8}]-(v19),
(sh6)<-[:ENEMY_OF{Weight:8}]-(v24),
(sh8)<-[:ENEMY_OF{Weight:9}]-(v11),
(sh13)<-[:ENEMY_OF{Weight:5}]-(v25),
(sh14)<-[:ENEMY_OF{Weight:10}]-(v22),
(sh15)<-[:ENEMY_OF{Weight:7}]-(v19),
(sh20)<-[:ENEMY_OF{Weight:9}]-(v15),
(sh21)<-[:ENEMY_OF{Weight:9}]-(v22),
(sh23)<-[:ENEMY_OF{Weight:4}]-(v16),
(sh20)<-[:ENEMY_OF{Weight:9}]-(v2),
(sh20)<-[:ENEMY_OF{Weight:5}]-(v6),
(sh20)<-[:ENEMY_OF{Weight:7}]-(v12),
(sh6)<-[:ENEMY_OF{Weight:9}]-(v22),
(sh6)<-[:ENEMY_OF{Weight:8}]-(v19),

(v1)-[:COMPANION{Weight:1}]->(v8),
(v8)-[:COMPANION{Weight:2}]->(v1),
(v8)-[:COMPANION{Weight:4}]->(v9),
(v2)-[:COMPANION{Weight:8}]->(v5),
(v2)-[:COMPANION{Weight:10}]->(v10),
(v2)-[:COMPANION{Weight:12}]->(v12),
(v2)-[:COMPANION{Weight:14}]->(v13),
(v2)-[:COMPANION{Weight:2}]->(v16),
(v15)-[:COMPANION{Weight:4}]->(v17),
(v22)-[:COMPANION{Weight:6}]->(v19),
(v23)-[:COMPANION{Weight:8}]->(v24),
(v24)-[:COMPANION{Weight:10}]->(v2),
(v7)-[:COMPANION{Weight:1}]->(v8),
(v1)-[:COMPANION{Weight:2}]->(v3),
(v14)-[:COMPANION{Weight:3}]->(v5),
(v16)-[:COMPANION{Weight:4}]->(v5),
(v25)-[:COMPANION{Weight:5}]->(v21),
(v19)-[:COMPANION{Weight:6}]->(v23),
(v18)-[:COMPANION{Weight:7}]->(v24),
(v24)-[:COMPANION{Weight:8}]->(v18),
(v11)-[:COMPANION{Weight:9}]->(v13),
(v13)-[:COMPANION{Weight:1}]->(v11),
(v13)-[:COMPANION{Weight:2}]->(v14),
(v1)-[:COMPANION{Weight:3}]->(v4),
(v20)-[:COMPANION{Weight:4}]->(v21),
(v24)-[:COMPANION{Weight:6}]->(v22),
(v1)-[:COMPANION{Weight:1}]->(v2),
(v2)-[:COMPANION{Weight:5}]->(v1),
(v16)-[:COMPANION{Weight:7}]->(v9),
(v9)-[:COMPANION{Weight:5}]->(v1)

//Create a subgraph
CALL gds.graph.project(
    'myGraph',
    'Villian',
    'COMPANION',
    {
        relationshipProperties: 'Weight'
    }
)


// 2. Calculated required memory
CALL gds.betweenness.write.estimate(
    "myGraph",
    {writeProperty: "Weight"}
)
YIELD nodeCount, relationshipCount, bytesMin,bytesMax,
requiredMemory


//Execute the algorithm
CALL gds.betweenness.stream('myGraph')
YIELD nodeId, score
RETURN gds.util.asNode(nodeId).Name AS Name, score
ORDER BY score DESC, Name ASC


// Add attribute to the graph
CALL gds.betweenness.write('myGraph',{writeProperty: 'betweenness'})
YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution




//SuperHeoes betweenness
//Create a subgraph
CALL gds.graph.project(
    'mySuperGraph',
    'SuperHero',
    'FRIEND_OF',
    {
        relationshipProperties: 'Weight'
    }
)


//Execute the algorithm
CALL gds.betweenness.stream('mySuperGraph')
YIELD nodeId, score
RETURN gds.util.asNode(nodeId).Name AS Name, score
ORDER BY score DESC, Name ASC


// Add attribute to the graph
CALL gds.betweenness.write('mySuperGraph',{writeProperty: 'betweenness'})
YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution

// In-degree
CALL gds.graph.project(
    'myINDegreeGraph',
    "Villian",
    {COMPANION: 
        {
            orientation: 'REVERSE',
            properties: 'Weight'
        }

    }
)

//ADD IN-DEGREE ATTRIBUTE TO NODE
CALL gds.degree.write(
    'myINDegreeGraph', 
    {writeProperty: 'inDegree'}
    )

YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution.max as maximunScore, centralityDistribution.mean as meanScore, nodePropertiesWritten



// OUTDREGREE
CALL gds.graph.project(
    'myOUTDegreeGraph',
    "Villian",
    {COMPANION: 
        {
            orientation: 'NATURAL',
            properties: 'Weight'
        }

    }
)

//ADD OUT-DEGREE ATTRIBUTE TO NODE

CALL gds.degree.write(
    'myOUTDegreeGraph', 
    {writeProperty: 'outDegree'}
    )

YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution.max as maximunScore, centralityDistribution.mean as meanScore, nodePropertiesWritten


//NO DIRECTION DEGREE SUPBGRAPH
CALL gds.graph.project(
    'myNoDirectionDegreeGraph',
    "Villian",
    {COMPANION: 
        {
            orientation: 'UNDIRECTED',
            properties: 'Weight'
        }

    }
)

//ADD NO DIRECTION DEGREE ATTRIBUTE TO NODE
CALL gds.degree.write(
    'myNoDirectionDegreeGraph', 
    {writeProperty: 'Degree'}
    )

YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution.max as maximunScore, centralityDistribution.mean as meanScore, nodePropertiesWritten


//FOR SUPERHEROES ------------------------
// In-degree 
CALL gds.graph.project(
    'myINDegreeGraphSuperHero',
    "SuperHero",
    {FRIEND_OF: 
        {
            orientation: 'REVERSE',
            properties: 'Weight'
        }
    }
)

//ADDING ATTRIBUTE
CALL gds.degree.write(
    'myINDegreeGraphSuperHero', 
    {writeProperty: 'inDegree'}
    )

YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution.max as maximunScore, centralityDistribution.mean as meanScore, nodePropertiesWritten

//OUT Degree
CALL gds.graph.project(
    'myOUTDegreeGraphSuperHero',
    "SuperHero",
    {FRIEND_OF: 
        {
            orientation: 'NATURAL',
            properties: 'Weight'
        }
    }
)

//ADDING ATTRIBUTE
CALL gds.degree.write(
    'myOUTDegreeGraphSuperHero', 
    {writeProperty: 'outDegree'}
    )

YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution.max as maximunScore, centralityDistribution.mean as meanScore, nodePropertiesWritten


//No direction
CALL gds.graph.project(
    'myNoDirectionDegreeGraphSuperHero',
    "SuperHero",
    {FRIEND_OF: 
        {
            orientation: 'UNDIRECTED',
            properties: 'Weight'
        }

    }
)

//ADD NO DIRECTION DEGREE ATTRIBUTE TO NODE
CALL gds.degree.write(
    'myNoDirectionDegreeGraphSuperHero', 
    {writeProperty: 'Degree'}
    )

YIELD centralityDistribution, nodePropertiesWritten
RETURN centralityDistribution.min as minimunScore, centralityDistribution.max as maximunScore, centralityDistribution.mean as meanScore, nodePropertiesWritten




MATCH (s:SuperHero) //Node name and alias
RETURN s.Name AS Hero, s.inDegree AS inDegree, s.outDegree as outDegree, s.Degree as Degree //Attributes from selected nodes
ORDER BY s.Degree DESC